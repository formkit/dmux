#!/usr/bin/env node
import('./dist/index.js');

set -e

CMUX_DIR="$HOME/.cmux"
CMUX_SESSIONS_FILE="$CMUX_DIR/sessions"

# Ensure cmux directory exists
mkdir -p "$CMUX_DIR"
touch "$CMUX_SESSIONS_FILE"

# Function to check if we're in a git repository
check_git_repo() {
    if ! git rev-parse --git-dir > /dev/null 2>&1; then
        echo "Error: Not in a git repository"
        exit 1
    fi
}

# Function to create a new worktree and tmux session
cmux_new() {
    local name="$1"
    
    if [ -z "$name" ]; then
        echo "Usage: cmux new <name>"
        exit 1
    fi
    
    check_git_repo
    
    # Get the root of the git repository
    local git_root=$(git rev-parse --show-toplevel)
    local worktree_path="$git_root/../$name"
    
    # Create the worktree
    echo "Creating worktree: $name"
    git worktree add "$worktree_path" -b "$name" 2>/dev/null || git worktree add "$worktree_path" "$name"
    
    # Create tmux session
    echo "Creating tmux session: $name"
    tmux new-session -d -s "$name" -c "$worktree_path"
    
    # Run claude in the new session
    tmux send-keys -t "$name" "claude" C-m
    
    # Give claude a moment to start, then clear the screen to force a repaint
    sleep 0.5
    tmux send-keys -t "$name" C-l
    
    # Track this session
    echo "$name:$worktree_path" >> "$CMUX_SESSIONS_FILE"
    
    # Switch to the new session
    if [ -n "$TMUX" ]; then
        tmux switch-client -t "$name"
    else
        tmux attach-session -t "$name"
    fi
}

# Function to list and select cmux sessions
cmux_ls() {
    # Clean up sessions file - remove non-existent tmux sessions
    local temp_file=$(mktemp)
    while IFS=':' read -r session_name session_path; do
        if [ -n "$session_name" ] && tmux has-session -t "$session_name" 2>/dev/null; then
            echo "$session_name:$session_path" >> "$temp_file"
        fi
    done < "$CMUX_SESSIONS_FILE"
    mv "$temp_file" "$CMUX_SESSIONS_FILE"
    
    # Check if there are any sessions
    if [ ! -s "$CMUX_SESSIONS_FILE" ]; then
        echo "No cmux sessions found"
        exit 0
    fi
    
    # Create array of session names
    local sessions=()
    while IFS=':' read -r session_name session_path; do
        if [ -n "$session_name" ]; then
            sessions+=("$session_name")
        fi
    done < "$CMUX_SESSIONS_FILE"
    
    if [ ${#sessions[@]} -eq 0 ]; then
        echo "No cmux sessions found"
        exit 0
    fi
    
    # Use select for interactive menu
    echo "Select a cmux session:"
    select session in "${sessions[@]}" "Cancel"; do
        case $session in
            "Cancel")
                exit 0
                ;;
            *)
                if [ -n "$session" ]; then
                    # Switch to selected session
                    if [ -n "$TMUX" ]; then
                        tmux switch-client -t "$session"
                    else
                        tmux attach-session -t "$session"
                    fi
                    exit 0
                else
                    echo "Invalid selection"
                fi
                ;;
        esac
    done
}

# Main command handler
case "${1:-}" in
    "new")
        cmux_new "$2"
        ;;
    "ls"|"list")
        cmux_ls
        ;;
    *)
        echo "Usage: cmux <command> [options]"
        echo ""
        echo "Commands:"
        echo "  new <name>    Create a new worktree and tmux session"
        echo "  ls            List and switch to cmux sessions"
        exit 1
        ;;
esac
